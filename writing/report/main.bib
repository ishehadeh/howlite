@misc{dunfield_bidirectional_2020,
	title = {Bidirectional Typing},
	url = {http://arxiv.org/abs/1908.05839},
	doi = {10.48550/arXiv.1908.05839},
	abstract = {Bidirectional typing combines two modes of typing: type checking, which checks that a program satisfies a known type, and type synthesis, which determines a type from the program. Using checking enables bidirectional typing to support features for which inference is undecidable; using synthesis enables bidirectional typing to avoid the large annotation burden of explicitly typed languages. In addition, bidirectional typing improves error locality. We highlight the design principles that underlie bidirectional type systems, survey the development of bidirectional typing from the prehistoric period before Pierce and Turner's local type inference to the present day, and provide guidance for future investigations.},
	number = {{arXiv}:1908.05839},
	publisher = {{arXiv}},
	author = {Dunfield, Jana and Krishnaswami, Neel},
	urldate = {2024-10-09},
	date = {2020-11-14},
	eprinttype = {arxiv},
	eprint = {1908.05839},
	keywords = {type-checking},
	file = {Preprint PDF:/home/ian/Zotero/storage/5THLLAYA/Dunfield and Krishnaswami - 2020 - Bidirectional Typing.pdf:application/pdf;Snapshot:/home/ian/Zotero/storage/CDY2XX6M/1908.html:text/html},
}
